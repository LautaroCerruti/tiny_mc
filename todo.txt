1) hacer un script de python que genere una gráfica a partir de los resultados
2) decidir que tamaños de tests y cuantas veces vamos a correr cada uno

Usar 2 pcs, usar gcc y clang, las opciones [O0, O1, O2, O3, Ofast] y alguna otra si hay, 
native y no native, mejora random y log si es posible.

lo mas logico me parece que para las optimizaciones probar ambos compiladores hacer:
opcion de optimizacion, optimizacion + native y optimizacion + native + lto
esto haria que sean 15 posibles combinaciones para cada compi, 30 en total
esto lo correria unas pocas veces para un valor muy grande en cada PC.
Esto nos dejaria con 2/4 graficas, divididas por pc o por pc+compilador.

Despues haria otra gráfica mostrando como escala el mejor programa obtenido con las 
optimizaciones segun el tamaño del problema, esto en cada PC son 2 gráficas mas.

La parte de optimizacion de código se puede hacer al pricipio o al final, si lo hacemos al 
final podemos sumar a la grafica de escalado por tamaño como seria con las optimizaciones de código, 
mostrando que tanto mejor es.