Done:
    Cosas que afectan a la version no vectorial:
        - reemplazamos la division por 0.1f por una multiplicacion por 10.0f en la actualizacion de los pesos.
        - hicimos una optimizacion matematica, reemplazando sqrtf((1.0f - u * u) / t) por 2.0f * sqrtf(1.0f - t).
        - probamos usar en lugar del metodo de rechazo, generar el punto en el cuadrado pero llevarlo a un punto dentro del circulo, pero nos dimos cuenta que afectactaba la uniformidad de la distribucion.
        - cambiamos el metodo para obtener la nueva direccion, en lugar de utilizar rechazo, usamos coordenadas polares (ya que esto es vectorizable).
        - cambiamos el modulo del xoshiro para que sea vectorizable, pero mantuvimos una funcion no vectorial para compatibilidad.
        
    Version vectorial:
        - modificamos el codigo haciendo que trabaje por bloques y con arrays de tama√±o de bloque para que el compilador pueda autovectorizarlo
          la unica cosa que no es vectorial es la actualizacion del mapa de calor, pero el peso a sumar a cada array de heat se calcula de forma vectorial
To do:
    - Adaptar los codigos en python para las nuevas pruebas y formatos de salida
    - evaluar el rendimiento de la nueva version no vectorial despues de los cambios para un N
    - probar diferentes combinaciones de flags sobre la version vectorial, intentando que -O3 y -Ofast vectoricen
      (tener en cuenta que -march=native, ffast-math y flto tienen que estar siempre activas porque si no no vectoriza)
    - probar con profile guided optimizations